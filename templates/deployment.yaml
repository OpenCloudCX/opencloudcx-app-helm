apiVersion: apps/v1
kind: Deployment
metadata:
  name: opencloudcx-bootstrap-app
  namespace: opencloudcx-bootstrap-app
  labels:
    io.opencloudcx.kubernetes.application.stack: opencloudcx-bootstrap-app
    app.kubernetes.io/name: opencloudcx-bootstrap-app
    app.kubernetes.io/instance: opencloudcx-bootstrap-app
    app.kubernetes.io/version: "2.0.0"
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app.kubernetes.io/name: opencloudcx-bootstrap-app
      app.kubernetes.io/instance: opencloudcx-bootstrap-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: opencloudcx-bootstrap-app
        app.kubernetes.io/instance: opencloudcx-bootstrap-app
    spec:
      serviceAccountName: opencloudcx-bootstrap-app-sa-clusteradmin 
      containers:
        - name: opencloudcx-bootstrap
          image: "rivasolutionsinc/opencloudcx-bootstrap-app:1.0"
          imagePullPolicy: IfNotPresent          
          ports:
            - name: http
              containerPort: 80
              protocol: TCP            
          livenessProbe:
            httpGet:
              path: /
              port: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
          resources:
            {}